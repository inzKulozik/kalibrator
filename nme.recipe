#!/usr/bin/env  python

__license__ = 'GPL v3'

from calibre.web.feeds.news import BasicNewsRecipe
import re


class NME(BasicNewsRecipe):
    title = u'NME'
    __author__ = 'Artur Stachecki <artur.stachecki@gmail.com>'
    language = 'en'
    description = u'NME.COM brings you the latest music news and reviews,\
                  music videos and gossip, as well as providing the hottest\
                  concert tickets and band memorabilia.'
    oldest_article = 7
    masthead_url = 'http://nme.com/themes/default/images/nme_logo.gif'
    max_articles_per_feed = 100
    simultaneous_downloads = 5
    remove_javascript = True
    no_stylesheets = True
    use_embedded_content = False
    recursions = 0

    keep_only_tags = []
    keep_only_tags.append(dict(id='content'))

    remove_tags = []
    remove_tags.append(dict(attrs={'class': ['header', 'bMore', 'left', 'large_tabs box', 'disclaimer',
                                             'nme_store box', 'more', 'feature_bar box_fixed_height video_carousel',
                                             'prev', 'next', 'prev_next_large box', 'headline', 'tickets tickets_no_artist box',
                                             'article_info box', 'media_caption', 'date', 'vcard author', 'footer',
                                             'gallery_next', 'gallery_prev', 'bPost_author', 'facebook2', 'bSmallPrint',
                                             'mugshot', 'clear_both', 'anchored_links',
                                             'video_image box_fixed_height', 'article_related box']}))
    remove_tags.append(dict(id=['article_comments', 'right_panel', 'footernav', 'buy-tickets-button',
                                'cluetip-outer', 'comments']))
    remove_tags.append(dict(attrs={'alt': ['The Movies Blog - The best new films and trailers -  The best new films and trailers',
                                           'The Big Picture - Awesome full-screen photos -  Awesome full-screen photos',
                                           'NME Blogs - NME Blogs -  NME Blogs',
                                           'New Music Radar - The best new music first -  The best new music first',
                                           'Magazine - In this week\'s NME -  In this week\'s NME"']}))

    preprocess_regexps = [(re.compile(r'&amp;mdash;.*?, 2012', re.DOTALL),
                           lambda match: '')]

    extra_css = '''       img { display: block; margin-right: auto; margin-left: auto; margin-bottom: 10px;}
                          h1 {text-align: left; font-size: 22px;}'''

    feeds = [(u'News', u'http://feeds.feedburner.com/nmecom/rss/newsxml?format=xml'),
             (u'Reviews', u'http://feeds.feedburner.com/nme/SdML?format=xml'),
             (u'Blogs', u'http://feeds.feedburner.com/nme/xitF?format=xml')]

    def preprocess_html(self, soup):
        for alink in soup.findAll('a'):
            if alink.string is not None:
                tstr = alink.string
                alink.replaceWith(tstr)
        return soup